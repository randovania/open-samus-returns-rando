name: Python Package

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    name: Wheel

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
     
      - name: Install Python packages
        run: python -m pip install --upgrade pip setuptools build

      - name: build wheel
        run: python -m build --wheel

      - name: build sdist
        run: python -m build --sdist
      
      - name: Store the packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist

  test:
    needs:
      - build
      
    runs-on: ubuntu-latest
    name: Test Python ${{ matrix.python.version }}
    strategy:
      fail-fast: false
      matrix:
        python:
          - {version: '3.10', wheel: 'cp310-cp310'}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.version }}

      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
            
      - name: Install Python packages
        run: python -m pip install --upgrade pip pytest

      - name: install built wheel
        run: python -m pip install dist/*.whl
        shell: bash

      - name: test
        run: python -m pytest tests

  starter_preset_patcher:
    runs-on: self-hosted
    needs:
      - build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: 'recursive'

      - name: Create venv
        run: python -m venv venv

      - name: Install Python packages
        run: venv/bin/python -m pip install --upgrade pip setuptools

      - name: Install
        run: venv/bin/python -m pip install -e .

      - name: Export
        run:
          venv/bin/python -m open_samus_returns_rando --input-path "$SAMUS_RETURNS_PATH" --output-path export/ --input-json tests/test_files/starter_preset_patcher.json

  mypy:
    runs-on: 'ubuntu-latest'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Workaround for worktree config
        run: git config --unset-all extensions.worktreeConfig || true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install Python packages
        run: python -m pip install .[typing]

      - name: Mypy on modified files
        uses: tsuyoshicho/action-mypy@v4
        with:
          github_token: ${{ secrets.github_token }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-check
          setup_method: install
          fail_on_error: false

      - name: Mypy on required files
        uses: tsuyoshicho/action-mypy@v4
        with:
          github_token: ${{ secrets.github_token }}
          # Change reviewdog reporter if you need [github-pr-check,github-check,github-pr-review].
          reporter: github-check
          setup_method: install
          target: --config-file=pyproject.toml
          fail_on_error: true


  pypi:
    runs-on: 'ubuntu-latest'
    needs:
      - test
      - starter_preset_patcher

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish ðŸ“¦ to TestPyPI
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.testpypi_password }}
          repository_url: https://test.pypi.org/legacy/

      - name: Create GitHub release
        uses: svenstaro/upload-release-action@2.9.0
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          file_glob: true
          tag: ${{ github.ref }}
          overwrite: true
          body: "New release"

      - name: Publish ðŸ“¦ to PyPI
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.pypi_password }}
